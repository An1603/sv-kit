#!/bin/bash
set -e

echo "=== SV-KIT N8N & FLUTTER WEB SETUP ==="

# Ki·ªÉm tra quy·ªÅn root
if [[ $EUID -ne 0 ]]; then
    echo "Script n√†y ph·∫£i ƒë∆∞·ª£c ch·∫°y v·ªõi quy·ªÅn root."
    exit 1
fi

# ƒê·ªãnh nghƒ©a domain
N8N_DOMAIN="n8n.way4.app"
FLUTTER_DOMAIN="eu.way4.app"

# Nh·∫≠p email cho SSL (t√πy ch·ªçn)
read -rp "Nh·∫≠p email admin cho SSL (ƒë·ªÉ tr·ªëng ƒë·ªÉ d√πng Let‚Äôs Encrypt t·ª± ƒë·ªông): " ADMIN_EMAIL
if [[ -z "$ADMIN_EMAIL" ]]; then
    echo "Kh√¥ng cung c·∫•p email, s·ª≠ d·ª•ng Let‚Äôs Encrypt t·ª± ƒë·ªông."
else
    echo "S·ª≠ d·ª•ng email: $ADMIN_EMAIL"
fi

# Ki·ªÉm tra domain tr·ªè v·ªÅ server
SERVER_IP=$(curl -s https://api.ipify.org)
N8N_DOMAIN_IP=$(dig +short "$N8N_DOMAIN" | tail -n 1)
FLUTTER_DOMAIN_IP=$(dig +short "$FLUTTER_DOMAIN" | tail -n 1)
if [[ -z "$N8N_DOMAIN_IP" || "$SERVER_IP" != "$N8N_DOMAIN_IP" ]]; then
    echo "Domain $N8N_DOMAIN kh√¥ng tr·ªè v·ªÅ IP server $SERVER_IP (IP nh·∫≠n ƒë∆∞·ª£c: $N8N_DOMAIN_IP)."
    echo "Vui l√≤ng c·∫≠p nh·∫≠t DNS v√† th·ª≠ l·∫°i."
    exit 1
fi
if [[ -z "$FLUTTER_DOMAIN_IP" || "$SERVER_IP" != "$FLUTTER_DOMAIN_IP" ]]; then
    echo "Domain $FLUTTER_DOMAIN kh√¥ng tr·ªè v·ªÅ IP server $SERVER_IP (IP nh·∫≠n ƒë∆∞·ª£c: $FLUTTER_DOMAIN_IP)."
    echo "Vui l√≤ng c·∫≠p nh·∫≠t DNS v√† th·ª≠ l·∫°i."
    exit 1
fi

# Ki·ªÉm tra c·ªïng 80 v√† 443
if ss -tuln | grep -q ':80\|:443'; then
    echo "C·ªïng 80 ho·∫∑c 443 ƒëang ƒë∆∞·ª£c s·ª≠ d·ª•ng. ƒêang ki·ªÉm tra ti·∫øn tr√¨nh..."
    lsof -i :80 -i :443
    echo "Vui l√≤ng d·ª´ng c√°c d·ªãch v·ª• xung ƒë·ªôt (nh∆∞ Apache, Nginx, ho·∫∑c Docker container)."
    echo "G·ª£i √Ω: D√πng 'docker ps' ƒë·ªÉ t√¨m container chi·∫øm c·ªïng, sau ƒë√≥ 'docker stop <container_id>'."
    exit 1
fi

# C√†i ƒë·∫∑t c√°c g√≥i c·∫ßn thi·∫øt
echo "üì¶ C·∫≠p nh·∫≠t v√† c√†i ƒë·∫∑t c√°c g√≥i c·∫ßn thi·∫øt..."
apt update -y && apt upgrade -y
apt install -y curl docker.io docker-compose net-tools

# Kh·ªüi ƒë·ªông Docker
systemctl enable docker --now

# C√†i ƒë·∫∑t Caddy n·∫øu ch∆∞a c√≥
if ! command -v caddy >/dev/null 2>&1; then
    echo "üõ° C√†i ƒë·∫∑t Caddy..."
    apt install -y debian-keyring debian-archive-keyring apt-transport-https
    curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg
    curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | tee /etc/apt/sources.list.d/caddy-stable.list
    apt update
    apt install -y caddy
fi

# T·∫°o th∆∞ m·ª•c v√† file index.html m·∫´u cho Flutter Web
echo "üìÇ T·∫°o th∆∞ m·ª•c v√† file index.html m·∫´u cho Flutter Web..."
mkdir -p /opt/flutter_web/build/web
cat > /opt/flutter_web/build/web/index.html <<EOF
<!DOCTYPE html>
<html>
<head>
    <title>Flutter Web Placeholder</title>
</head>
<body>
    <h1>Ch√†o m·ª´ng ƒë·∫øn v·ªõi Flutter Web!</h1>
    <p>ƒê√¢y l√† trang placeholder cho $FLUTTER_DOMAIN. Vui l√≤ng deploy d·ª± √°n Flutter Web v√†o /opt/flutter_web/build/web.</p>
</body>
</html>
EOF

# S·ª≠a quy·ªÅn th∆∞ m·ª•c Flutter Web
chown -R caddy:caddy /opt/flutter_web
chmod -R 755 /opt/flutter_web

# C